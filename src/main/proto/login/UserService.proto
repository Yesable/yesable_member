syntax="proto3";

option java_multiple_files = true;
option java_package= "com.example.grpc";
option java_outer_classname = "UserServiceProto";

package user;

service UserService {
    rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);
    rpc OnBoardingUser(OnboardingUserRequest) returns (OnboardingUserResponse);
   // rpc ProfileUpdate(ProfileUpdateUserRequest) returns(ProfileUpdateUserResponse);



}
//------------------------------------------------- enum v
enum InterestFieldGRPC {
  FOOD=0;
  RETAIL=1;
  CULTURE=2;
  SERVICE=3;
  AFFAIR=4;
  SALES=5;
  MANUFACTURE=6;
  IT=7;
  DESIGN=8;
  DRIVE=9;
  EDUCATION=10;
  HOSPITAL=11;
  MEDIA=12;
}

enum GenderGRPC{
  MALE=0;
  FEMALE=1;
  ETC=2;
}
enum WorkTypeGRPC {
  PARTTIMEJOB=0;
  INTERN=1;
  CONTRACT=2;
  FULLTIME=3;

}

enum EducationlevelGRPC {
  CHOJOL=0;
  JUNGJOL=1;
  GOJOL=2;
  UNIV23=3;
  UNIV4=4;
  GRADUATESCHOOL=5;

}

enum DisabilitytypeGRPC {

  PHYSICAL_DISABILITY_MOBILITY_IMPAIRED = 0;
  PHYSICAL_DISABILITY_BRAIN_LESSON = 1;
  PHYSICAL_DISABILITY_VISUAL_IMPAIRED = 2;
  PHYSICAL_DISABILITY_HEARING_IMPAIRED = 3;
  PHYSICAL_DISABILITY_SPEECH_IMPAIRED = 4;
  PHYSICAL_DISABILITY_FACIAL_IMPAIRED = 5;

  // Physical Disabilities - Internal
  PHYSICAL_DISABILITY_KIDNEY_IMPAIRED = 6;
  PHYSICAL_DISABILITY_HEART_IMPAIRED = 7;
  PHYSICAL_DISABILITY_RESPIRATORY_IMPAIRED = 8;
  PHYSICAL_DISABILITY_LIVER_IMPAIRED = 9;
  PHYSICAL_DISABILITY_STOMA_IMPAIRED = 10;
  PHYSICAL_DISABILITY_EPILEPSY_IMPAIRED = 11;

  // Mental Disabilities
  MENTAL_DISABILITY_INTELLECTUAL_IMPAIRED = 12;
  MENTAL_DISABILITY_MENTAL_IMPAIRED = 13;
  MENTAL_DISABILITY_AUTISM_IMPAIRED = 14;


}

enum CompclassGRPC {
  SMALL=0;
  MIDDLE=1;
  BIG=2;
}

enum ExperiencetypeGRPC {
  Experiencetype_NULL=0;
  NOEXPERIENCE=1;
  YESEXPERIENCE=2;
}

//--------------------------------------------  enum ^
message RegisterUserRequest {

  PrivateUserGRPC private_user = 1;

}

message RegisterUserResponse {
  string message = 1;
  bool success = 2;
}


message OnboardingUserRequest {
  /*
  1. 희망 근무지 서울 부산 대구 ..
  2. 대중교통 이용 가능 여부 TF
  3. 관심분야, InterestField
  4. 경력사항, 회사명 직무 근무기간 주요 업무 내용
  5. 기술 및 자격증
  6. 학력사항
  7. 지원 필요사항 (선택)
  8. 기타 및 자기소개
   */

  string workplace=1; //희망 근무지
  bool publictransportationTF=2;
  InterestFieldGRPC interestfield=3;
  ExperiencetypeGRPC experiencetype=4; //신입인지 경력인지만 표시, 신입이라면 experiences가 null 또는 0
  repeated ExperienceGRPC experiences=5; //경력이라면 그와 관련된 경력사항들을 의미함
  repeated string skills=6; //특정 기술 및 자격증이 있다면 나열
  EducationlevelGRPC educationlevel=7; //학력사항
  string supportneeds=8;
  string selfintroduce=9; //자기소개



}

message OnboardingUserResponse {
  string message=1;
  bool success=2;
}
/*
message ProfileUpdateUserRequest {

}

message ProfileUpdateUserRequest {

}*/

//--------------------------------

message CoreUserGRPC {
  string id=1; //엔티티의 id가 아니라 qwer같은 아이디
  string password=2;
  string email=3;
  string phoneNumber=4;
  string name=5;


  GenderGRPC gender=6;
  string dateOfBirth=7;
  repeated string authorities=8;
}

message PrivateUserGRPC {
  CoreUserGRPC core_user = 1;
  string username=2;
  string location=3;


  repeated InterestFieldGRPC interestField=4;


  repeated WorkTypeGRPC workType=5;


  repeated string skills=6;

  EducationlevelGRPC educationlevel = 7;
  string personality=8;
  string hobbies=9;
  string supportneeds=10;


  DisabilitytypeGRPC disabilitytype=11;
  repeated ExperienceGRPC experiences=12;
}



message ExperienceGRPC {
  int64 id=1;
  PrivateUserGRPC privateuser=2;



  ExperiencetypeGRPC experiencetype=3;
  string companyname=4;
  LocalDateGRPC startdate=5;
  LocalDateGRPC enddate=6;
  string department=7;
  string jobdescription=8;
}

message LocalDateGRPC {
  int32 year=1;
  int32 month=2;
  int32 day=3;
}